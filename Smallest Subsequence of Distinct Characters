class Solution {
public:
    string smallestSubsequence(string s) {
        stack<char> s1;
        vector<int> v(26,0);
        vector<int> count(26,0);
        for(int i = 0; i < s.size();i++){
            count[s[i]-97]++;
        }
        for(int i = 0; i < s.size(); i++){
            count[s[i]-97]--;
            if(v[s[i]-97] == 1){
                continue;
            }
            if(s1.empty() || s[i] > s1.top()){
                s1.push(s[i]);
                v[s[i]-97] = 1;
            }
            else{
                while(!s1.empty() && count[s1.top()-97] != 0 && s[i] < s1.top()){
                    v[s1.top()-97] = 0;
                    s1.pop();
                }
                s1.push(s[i]);
                v[s[i]-97] = 1;
            }
        }
        string res = "";
        while(!s1.empty()){
            res = s1.top()+res;
            s1.pop();
        }
        return res;
    }
};
