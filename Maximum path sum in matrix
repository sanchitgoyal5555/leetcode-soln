class Solution{
public:
    int maximumPath(int n, vector<vector<int>> arr)
    {
        // code here
        vector<vector<int>> dp(n, vector<int>(n,0));
        for(int i = 0; i < n; i++){
            dp[0][i] = arr[0][i];
        }
        for(int i = 1; i < n; i++){
            for(int j = 0; j < n; j++){
                if(j-1 >= 0 && j+1 < n){
                    dp[i][j] = arr[i][j] + max(dp[i-1][j-1],max(dp[i-1][j], dp[i-1][j+1]));
                }
                else if(j-1<0){
                    dp[i][j] = arr[i][j] + max(dp[i-1][j], dp[i-1][j+1]);
                }
                else if(j+1 > n-1){
                    dp[i][j] = arr[i][j] + max(dp[i-1][j], dp[i-1][j-1]);
                }
                
            }
        }
        int maxi = dp[n-1][0];
        for(int i = 0; i < n; i++){
            maxi = max(maxi,dp[n-1][i]);
        }
        return (int)maxi;
    }
};
