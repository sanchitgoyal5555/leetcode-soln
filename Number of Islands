class Solution {
public:
    int m,n;
    
    
    bool isValid(int i, int j){
        return i >= 0 && i<m && j >= 0 && j<n;
    }
    
    void connected(vector<vector<char>>& grid, int i, int j, vector<vector<bool>>& visited){
        visited[i][j] = true;
        int dx[] = {-1,0,1,0};
        int dy[] = {0,1,0,-1};
        for(int a = 0; a < 4; a++){
            int x = i + dx[a];
            int y = j + dy[a];
            if(isValid(x,y) && !visited[x][y] && grid[x][y] == '1'){
                visited[x][y] = true;
                connected(grid,x,y,visited);
            }
        }
    }
    int numIslands(vector<vector<char>>& grid) {
        m = grid.size();
        n = grid[0].size();
        int ans = 0;
        vector<vector<bool>> visited(m,vector<bool>(n,false));
        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                if(grid[i][j] == '1' && visited[i][j] == false){
                    visited[i][j] = true;
                    connected(grid,i,j,visited);
                    ans++;
                }
            }
        }
        return ans;
    }
};
