/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* helper(vector<int>& inorder, vector<int>& postorder, int
                      instart, int inend, int poststart, int postend){
        if(poststart > postend || instart > inend){
            return NULL;
        }
        TreeNode* root = new TreeNode(postorder[postend]);
        int i = instart;
        while(i <= inend && inorder[i] != root->val){
            i++;
        }
        root->left = helper(inorder, postorder, instart, i-1, poststart,
                            poststart+i-instart-1);
        root->right = helper(inorder, postorder, i+1, inend,
                             poststart+i-instart, postend-1);
        return root;
        
    }
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
        return helper(inorder, postorder, 0, inorder.size()-1, 0,                                   postorder.size()-1);
    }
};
