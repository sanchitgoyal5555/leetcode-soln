class Solution {
public:
    int trap(vector<int>& height) {
        
        int n = height.size();
        if(n <= 2){return 0;}
        int area = 0;
        vector<int> max_front(n,0);
        vector<int> max_rear(n,0);
        max_front[0] = height[0];
        for(int i = 1; i < n; i++){
            max_front[i] = max(max_front[i-1], height[i]);
        }
        max_rear[n-1] = height[n-1];
        for(int i = n-2; i >= 0; i--){
            max_rear[i] = max(max_rear[i+1],height[i]);
        }
        
        for(int i = 1; i < n-1; i++){
            int temp = min(max_front[i-1], max_rear[i+1])-height[i];
            if(temp > 0){
                area += temp;
            }
        }
        return area;
    }
};
