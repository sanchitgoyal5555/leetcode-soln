/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    vector<ListNode*> splitListToParts(ListNode* head, int k) {
        int len = 0;
        ListNode* temp = head;
        while(temp){
            temp = temp->next;
            len++;
        }
        vector<ListNode*> output(k,NULL);
        int x = len/k;
        //int i = 0;
        temp = head;
        // if(x==0){
        //     int i = 0;
        //     while(temp){
        //         output[i] = temp;
        //         //temp = temp->next;
        //         if(temp){
        //             ListNode* curr = temp->next;
        //             temp->next = NULL;
        //             temp = curr;
        //         }
        //         i++;
        //     }
        //     return output;
        // }
        
        int i = 0;
        while(temp){
            output[i] = temp;
            if(len%k != 0 && x!= 0){
                temp = temp->next;
                len--;
            }
            int j = 1;
            while(temp && j<x){
                temp = temp ->next;
                j++;
            }
            if(temp){
                ListNode* curr = temp->next;
                temp->next = NULL;
                temp = curr;
            }
            i++;
        }
        
        return output;
    }
};
