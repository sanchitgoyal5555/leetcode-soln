/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *l1, ListNode *l2) {
        int n = 0;
		int m = 0;
		ListNode* ptr1 = l1;
		ListNode* ptr2 = l2;
		while(ptr1 != NULL){
			n++;
			ptr1 = ptr1 -> next;
		}
		while(ptr2 != NULL){
			m++;
			ptr2 = ptr2 -> next;
		}
        int t = abs(n - m);
        if(n>m){
            while(t){
                l1 = l1->next;
                t--;
            }
        }
        else{
            while(t){
                l2 = l2->next;
                t--;
            }
        }
        while(l1 && l2){
            if(l1 == l2){
                return l1;
            }
            l1 = l1->next;
            l2 = l2->next;
        }
        return NULL;
    }
};
