/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    void reorderList(ListNode* head) {
        ListNode* slow = head, *fast = head;
        while ( fast->next && fast->next->next ){
			slow = slow->next;
			fast = fast->next->next;
		}
        ListNode* prev = NULL, *curr = slow->next;
        while(curr){
            ListNode* temp = curr->next;
            curr->next = prev;
            prev = curr;
            curr = temp;
        }
        slow->next = NULL;
        slow = prev;
        ListNode* front = head;
        while(front && slow){
            ListNode* temp2 = front->next;
            front->next = slow;
            front = slow;
            // front = temp2;
            slow = temp2;
        }
        if(front)
            front -> next = NULL;
        
        
    }
};
