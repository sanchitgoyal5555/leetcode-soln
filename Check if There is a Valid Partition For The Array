class Solution {
public:
    int dp[100005];
    bool helper(vector<int>& nums, int i){
        if(i >= nums.size()){
            return true;
        }
        if(dp[i] != -1){
            return dp[i];
        }
        bool ans = false;
        if(i+1 < nums.size() && nums[i] == nums[i+1]){
            ans = helper(nums, i+2);
        }
        if(i+2 < nums.size() && nums[i] == nums[i+1] && nums[i] == nums[i+2]){
           ans = ans || helper(nums, i+3);
        }
        if(i+2 < nums.size() && nums[i+1] - nums[i] == 1 && nums[i+2] - nums[i+1] == 1){
            ans = ans || helper(nums, i+3);
        }
        return dp[i] = ans;
        
    }
    
    bool validPartition(vector<int>& nums) {
        memset(dp, -1, sizeof dp);
        return helper(nums, 0);
    }
};
